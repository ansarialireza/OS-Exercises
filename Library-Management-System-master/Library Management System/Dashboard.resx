<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZCxfJN1FEDOhq4oogZ//2Q==
</value>
  </data>
</root>